{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","style","backgroundColor","width","src","username","alt","name","email","city","website","company","CardList","robotslist","robots","map","robot","address","id","SearchBox","searchChange","onChange","type","placeholder","Scroll","overflowY","height","children","ErrorBoundry","state","hasError","error","errorInfo","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0OAgBeA,EAdF,SAACC,GACV,OACI,sBAAKC,UAAU,yBAAyBC,MAAO,CAACC,gBAAiB,WAAjE,UACI,qBAAKF,UAAU,MAAMC,MAAO,CAACE,MAAO,SAAUC,IAAG,+BAA0BL,EAAMM,SAAhC,aAAqDC,IAAI,WAC1G,6BAAKP,EAAMQ,OACX,2CAAcR,EAAMM,YACpB,wCAAWN,EAAMS,SACjB,uCAAUT,EAAMU,QAChB,0CAAaV,EAAMW,WACnB,0CAAaX,EAAMY,eCUhBC,EAlBE,SAAC,GAAgB,IAC1BC,EADyB,EAAbC,OACQC,KAAI,SAACC,GAC7B,OACE,cAAC,EAAD,CAEET,KAAMS,EAAMT,KACZF,SAAUW,EAAMX,SAChBG,MAAOQ,EAAMR,MACbC,KAAMO,EAAMC,QAAQR,KACpBE,QAASK,EAAML,QAAQJ,KACvBG,QAASM,EAAMN,SANVM,EAAME,OAWjB,OAAO,qBAAKlB,UAAU,6CAAf,SAA6Da,KCZvDM,EAJG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OAAO,uBAAOpB,UAAU,gBAAgBqB,SAAUD,EAAcE,KAAK,SAASC,YAAY,2BCO7EC,EARA,SAACzB,GACZ,OACI,qBAAKC,UAAU,MAAMC,MAAO,CAACwB,UAAW,SAAUC,OAAO,SAAzD,SACK3B,EAAM4B,YCuBJC,E,kDAzBb,WAAY7B,GAAQ,IAAD,8BACjB,cAAMA,IACD8B,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAME,MAEX,gOAOGE,KAAKlC,MAAM4B,a,GAtBKQ,aC4CZC,G,wDAtCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAb1C,EAAKZ,MAAQ,CACXf,OAAQ,GACRyB,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAACC,GAAc,OAAOA,EAASC,UACpCF,MAAK,SAACG,GAAW,EAAKZ,SAAS,CAAEpB,OAAQgC,S,oBAO9C,WACE,MAA8Bb,KAAKJ,MAA5Bf,EAAP,EAAOA,OAAQyB,EAAf,EAAeA,YACTQ,EAAiBd,KAAKJ,MAAMf,OAAOkC,QAAO,SAAChC,GAC/C,OAAOA,EAAMT,KAAK0C,cAAcC,SAASX,EAAYU,kBAGrD,OAAQnC,EAAOqC,OACb,sBAAKnD,UAAU,KAAf,UACE,oBAAIA,UAAU,uBAAd,4BACA,cAAC,EAAD,CAAWoB,aAAca,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUvB,OAAQiC,WANF,oBAAI/C,UAAU,kBAAd,4B,GAzBZmC,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.06a55c92.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className=\"w-25 ma3 pa2 br3 white\" style={{backgroundColor: \"#004AAD\"}}>\r\n            <img className=\"br4\" style={{width: \"200px\"}} src={`https://robohash.org/${props.username}?set=set5`} alt=\"robots\" />\r\n            <h2>{props.name}</h2>\r\n            <p>Known By: {props.username}</p>\r\n            <p>Email: {props.email}</p>\r\n            <p>City: {props.city}</p>\r\n            <p>Website: {props.website}</p>\r\n            <p>Company: {props.company}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  const robotslist = robots.map((robot) => {\r\n    return (\r\n      <Card\r\n        key={robot.id}\r\n        name={robot.name}\r\n        username={robot.username}\r\n        email={robot.email}\r\n        city={robot.address.city}\r\n        company={robot.company.name}\r\n        website={robot.website}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div className=\"flex flex-wrap align-center justify-center\">{robotslist}</div>;\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n  return <input className=\"pa3 w7 bn br3\" onChange={searchChange} type=\"search\" placeholder=\"Search for a robot...\" />;\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div className=\"mv5\" style={{overflowY: 'scroll', height: `500px`}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      return (\r\n        <p>\r\n          There has been a problem with resources. We're working on the\r\n          solution, if it's not a problem please do alarm me either by sending\r\n          an email or by posting an issue. Sorry for the incovenience.\r\n        </p>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\"\r\nimport ErrorBoundry from \"../components/ErrorBoundry\"\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`https://jsonplaceholder.typicode.com/users`)\r\n      .then((response) => {return response.json();})\r\n      .then((users) => {this.setState({ robots: users })});\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {robots, searchfield} = this.state;\r\n    const filteredRobots = this.state.robots.filter((robot) => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    });\r\n    \r\n      return !robots.length ? <h1 className=\"tc f4 white fw1\">Loading...</h1> : (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f1 white tracked fw5\">Office Friends</h1>\r\n          <SearchBox searchChange={this.onSearchChange} />\r\n          <Scroll>\r\n            <ErrorBoundry>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundry>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./containers/App\"\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"tachyons\";\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}